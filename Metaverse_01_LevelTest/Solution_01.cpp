// 1.	포인터와 레퍼런스를 활용해 함수 외부에서 선언된 두 정수형 변수의 값을 서로 바꾸는 Swap 함수를 각각 구현하시오.
// void swap(int* a, int* b);
// void swap(int& a, int& b);
// 
// 
// [ Solution ]
// 
// 1. swap 함수
// 
// (1) 객체로부터 접근
// swap 함수는 매개변수로 받아오는 객체 a와 b의 값을 바꿔주는 함수이다.
// a와 b의 값을 바꿔주기 위해 객체에 대한 접근이 필요하여 주소값을 사용한 포인터 타입을 통해 객체를 간접참조를 한다.
// 
// (2) swap
// 접근한 객체는 대입 연산을 통해 값을 바꿔줄 수 있으나, 대입 연산이 이루어지면 대입을 받은 객체의 값이 상실될 수 있다.
// 따라서 상실될 객체의 값을 저장해줄 객체가 하나 더 필요하게 되었으며, temp라는 int 타입의 함수 범위 객체를 생성하였다.
// 주소값으로 받은 객체(a)를 역참조하여 값을 불러와 temp 객체에 임시 저장하여 a의 값을 보존하였고,
// a의 값에 b의 값을 대입, b에는 저장해둔 temp의 값을 대입하는 것으로 swap을 이루었다.
// 
// 
// 2. 포인터와 레퍼런스
// 
// 포인터와 레퍼런스는 간접 참조를 위한 타입이다.
// 레퍼런스는 간접 참조를 더욱 편리하게 사용하기 위한 기능으로 역참조 연산자를 사용할 필요가 없는 특징이 있다.
// 따라서 포인터를 활용 함수에서 사용한 역참조(*a, *b) 없이 a, b를 통해 swap 함수를 작성할 수 있다.//
//

void swap(int* a, int* b)
{
	int temp = *a;
	*a = *b;
	*b = temp;
}

void swap(int& a, int& b)
{
	int temp = a;
	a = b;
	b = temp;
}